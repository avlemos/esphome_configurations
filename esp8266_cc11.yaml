esphome:
  name: espcc1101
  comment: CC11 RF Bridge
  # on_boot:
  # - priority: 300
  #   then:
  #     lambda: |-
  #       WiFi.setPhyMode(WIFI_PHY_MODE_11B);
  
external_components:
  - source: github://pr#6300
  # - source: github://swoboda1337/components-esphome@main
    components: [ cc1101 ]

esp8266:
  board: d1_mini
  framework:
    version: 3.1.2
    # source: ~3.30102.0
    platform_version: platformio/espressif8266@4.2.1
  restore_from_flash: false
  early_pin_init: true
  board_flash_mode: dout

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  output_power: 8.5dB
  # power_save_mode: HIGH

captive_portal:

# Enable logging to the console
logger:
  level: VERBOSE

# Home Assistant integration
api:
  encryption:
    key: 
      !secret encryption_key_cc11
  port: 6053
  password: ''
  reboot_timeout: 15min
  batch_delay: 100ms
  services:
  - service: 'remote_transmit'
    variables:
      code: string
    then:
    #   - remote_transmitter.transmit_cc1101:
    #     code: !lambda 'return code.c_str();'
    #       protocol:
    #         pulse_length: 420
    #         sync: [1,31]
    #         zero: [1,3]
    #         one: [3,1]
    #         inverted: true
    #       repeat:
    #         times: 10


# i2c:
#   frequency: 800kHz
#   scan: true

spi:
  clk_pin: D5
  miso_pin: D6
  mosi_pin: D7


# Sensors definitions
sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_db
    update_interval: 300s
    entity_category: "diagnostic"
    accuracy_decimals: 0
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    device_class: ""
  - platform: uptime
    name: Co2 RF Uptime
    update_interval: 300s
  - platform: uptime
    name: CC11 RF Uptime
    update_interval: 300s

ota:
  - platform: esphome
    password: !secret ota_password
    version: 2
    port: 8266

text_sensor:
  # ESPHome version
  - platform: version
    hide_timestamp: true
    name: "ESPHome Version"
  # IP address and connected SSID
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      icon: mdi:wifi
    ssid:
      name: "Connected SSID"
      icon: mdi:wifi-strength-2
    bssid:
      name: "BSSID"
      icon: mdi:wifi


cc1101:
  id: transceiver
  cs_pin: D4
  output_power: 11
  # gdo0_pin: D1
  tuner:
    frequency: 433920
    modulation: ASK/OOK
    carrier_sense_above_threshold: true
    # if_frequency: 153
    # bandwidth: 100
    # # channel: 0
    # # channel_spacing: 200
    # # fsk_deviation: 47.607
    # # msk_deviation: 0
    symbol_rate: 5000
    # sync_mode: None
    # carrier_sense_above_threshold: true
  # agc:    
    # magn_target:
    # max_lna_gain:
    # max_dva_gain:
    # carrier_sense_abs_thr:
    # carrier_sense_rel_thr:
    # lna_priority:
    # filter_length_fsk_msk:
    # filter_length_ask_ook:
    # freeze:
    # wait_time:
    # hyst_level:
  sensor:
    chip_id:
      name: Chip Id
    rssi:
      name: RSSI
      accuracy_decimals: 1
      unit_of_measurement: dBm
      entity_category: diagnostic


number:
  - platform: cc1101
    output_power:
      name: output_power
    tuner:
      frequency:
        name: Tuner frequency
      if_frequency:
        name: Tuner if_frequency
      bandwidth:
        name: Tuner bandwidth
      channel:
        name: Tuner channel
      channel_spacing:
        name: Tuner channel_spacing
      fsk_deviation:
        name: Tuner fsk_deviation
      msk_deviation:
        name: Tuner msk_deviation
      symbol_rate:
        name: Tuner symbol_rate
    agc:
      carrier_sense_abs_thr:
        name: AGC carrier_sense_abs_thr

# remote_transmitter:
#   - id: transmitter
#     pin:
#       number: D1 # This is GDO0
#       allow_other_uses: true
#     carrier_duty_percent: 100%
#     on_transmit:
#       then:
#         - cc1101.begin_tx: transceiver
#     on_complete:
#       then:
#       - cc1101.end_tx: transceiver

remote_receiver:
  - id: receiver
    pin:
      number: D1 # This is GDO0
      allow_other_uses: false
    dump:
      # - rc_switch
      - raw
    tolerance: 50%
    buffer_size: 2kb
    filter: 250us
    idle: 10ms
    # tolerance: 40%
    # filter: 350us
    # idle: 6ms
    # # buffer_size: 2kb
    # dump:
    #   - raw
    # on_dooya:
    #   then:
    #     - logger.log: "Dooya"

switch:
  # - platform: template
  #   name: "Garage"
  #     turn_on_action:
  #       - remote_transmitter.transmit_raw:
  #         code: [325, -586, 286, -645, 263, -625, 270, -625, 263, -647, 254, -636, 281, -611, 5071, -646, 552, -350, 235, -674, 549, -344, 241, -640, 253, -643, 264, -650, 571, -315, 606, -264, 627, -306, 576, -315, 574, -320, 595, -316]
  #         repeat:
  #           times: 3
  #           wait_time: 5ms


  # - platform: template
  #   name: "Garage"
  #   turn_on_action:
  #     - remote_transmitter.transmit_raw:
  #         # code: [325, -586, 286, -645, 263, -625, 270, -625, 263, -647, 254, -636, 281, -611, 5071, -646, 552, -350, 235, -674, 549, -344, 241, -640, 253, -643, 264, -650, 571, -315, 606, -264, 627, -306, 576, -315, 574, -320, 595, -316]
  #         code: [325, -586, 286, -645, 263, -625, 270, -625, 263, -647, 254, -636, 281, -611, 5071, -646, 552, -350, 235, -674, 549, -344, 241, -640, 253, -643, 264, -650, 571, -315, 606, -264, 627, -306, 576, -315, 574, -320, 595, -316, 246, -651, 566, -334, 252, -638, 585, -306, 262, -625, 271, -620, 294, -598, 285, -614, 294, -626, 271, -622, 261, -629, 266, -642, 263, -632, 596, -290, 272, -637, 596, -314, 248, -641, 291, -578, 308, -617, 589, -308, 261, -625, 272, -642, 586, -316, 567, -318, 587, -314, 568, -321, 610, -286, 597, -300, 273, -625, 295, -594, 266, -639, 267, -624, 268, -626, 292, -626, 262, -631, 252, -646, 268, -620, 592, -293, 292, -620, 267, -613, 322, -594, 269, -626, 590, -308, 598, -300, 601, -306, 575, -315, 254, -642, 267, -625, 614, -292, 293, -597, 269, -628, 293, -601, 607, -5121]
  #         # repeat:
  #         #   times: 3
  #         #   wait_time: 5ms

binary_sensor:
  - platform: status
    name: CC11 RF Status

  - platform: remote_receiver
    name: "Open Living RoomL1"
    raw:
      code: [630, -1487, 833, -674]
    on_press:
      - homeassistant.event:
          event: esphome.remote_pressed
          data:
            button: blind_living_open

  - platform: remote_receiver
    name: "Open Living RoomL2"
    raw:
      code: [2035, -703, 1156, -623]
    on_press:
      - homeassistant.event:
          event: esphome.remote_pressed
          data:
            button: blind_living_open

  - platform: remote_receiver
    name: "Open Living RoomL3"
    raw:
      code: [1005, -2477, 522, -1242]
    on_press:
      - homeassistant.event:
          event: esphome.remote_pressed
          data:
            button: blind_living_open

  - platform: remote_receiver
    name: "Open Living RoomL4"
    raw:
      code: [5072, -616, 572, -1252]
    on_press:
      - homeassistant.event:
          event: esphome.remote_pressed
          data:
            button: blind_living_open


  - platform: remote_receiver
    name: "Open Blind Tomas"
    raw:
      # code: [327, -604, 261, -637, 278, -598, 296, -594, 290, -611, 293, -601, 276, -615, 283, -624]
      code: [301, -610, 290, -622, 1153, -622, 1157, -622, 266, -621, 268, -639]
      # code: [300, -624, 271, -601, 273, -615, 317, -575, 295, -621, 246, -654, 237, -651, 243, -645, 5018, -616, 623]
      # code: [300, -629, 1130, -657, 1131, -648, 261, -642, 1129, -639, 1722, -926, 2408, -621, 585, -292, 272, -626]
    on_press:
      - homeassistant.event:
          event: esphome.remote_pressed
          data:
            button: blind_tomas_open


  # - platform: remote_receiver
  #   name: "Close Blind Tom√°s"
  #   raw:
  #     code: [5371, -668, 630, -289, 255, -662, 635, -292, 251, -642, 289, -625, 289, -638, 644, -268, 646, -272, 640, -289, 648, -277, 263, -633, 276, -666, 264, -647, 276, -648, 263, -649]
  #   on_press:
  #     - homeassistant.event:
  #         event: esphome.remote_pressed
  #         data:
  #           button: blind_tomas_close


#   cover:
# - platform: time_based
#   name: 'D1 RF Cover'
#   id: d1_rf_cover
#   device_class: blind
#   assumed_state: true
#   has_built_in_endstop: true

#   close_action:
#     - lambda: get_cc1101(transciver).beginTransmission();
#     - remote_transmitter.transmit_raw:
#         code: [-7583, 4721, -1462, 335, -701, 366, -701, 701, -366, 670, -366, 701, -366, 670, -366, 366, -701, 366, -670, 731, -335, 701, -335, 731, -335, 366, -670, 366, -701, 366, -701, 335, -731, 701, -335, 701, -366, 366, -701, 366, -670, 366, -701, 670, -366, 731, -335, 701, -335, 366, -701, 366, -670, 366, -731, 335, -731, 305, -731, 335, -701, 701, -366, 366, -701, 701, -335, 366, -701, 366, -670, 731, -335, 701, -335, 366, -701, 366, -670, 731, -366, 701]
#         repeat:
#           times: 10
#     - lambda: get_cc1101(transciver).endTransmission();
#   close_duration: 10s

#   stop_action:
#     - lambda: get_cc1101(transciver).beginTransmission();
#     - remote_transmitter.transmit_raw:
#         code: [-7583, 4751, -1401, 366, -701, 366, -701, 701, -366, 701, -366, 670, -366, 701, -366, 366, -670, 366, -701, 701, -335, 701, -366, 670, -366, 366, -701, 366, -670, 366, -701, 366, -670, 731, -335, 731, -335, 335, -731, 335, -701, 335, -731, 701, -335, 701, -366, 701, -335, 396, -670, 366, -701, 366, -670, 366, -701, 366, -670, 366, -701, 731, -305, 366, -731, 701, -335, 366, -701, 701, -335, 366, -701, 701, -366, 366, -670, 701, -366, 366, -670, 731]
#         repeat:
#           times: 10
#     - lambda: get_cc1101(transciver).endTransmission();

#   open_action:
#     - lambda: get_cc1101(transciver).beginTransmission();
#     - remote_transmitter.transmit_raw:
#         code: [-7583, 4690, -1432, 366, -701, 366, -670, 731, -335, 731, -305, 731, -335, 701, -366, 335, -731, 335, -701, 701, -366, 670, -366, 701, -366, 335, -701, 366, -701, 335, -701, 366, -701, 701, -335, 731, -335, 366, -670, 366, -731, 335, -701, 701, -366, 670, -366, 701, -335, 366, -701, 366, -670, 366, -701, 366, -670, 366, -701, 366, -670, 731, -335, 366, -670, 731, -335, 366, -701, 335, -731, 335, -701, 701, -366, 335, -701, 366, -701, 335, -701, 701]
#         repeat:
#           times: 10
#     - lambda: get_cc1101(transciver).endTransmission();
#   open_duration: 10s